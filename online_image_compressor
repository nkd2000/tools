<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Image Compressor</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            text-align: center;
            margin: 20px;
            background-color: #f5f5f5;
        }

        h1 {
            color: #333;
        }

        #inputContainer {
            margin-bottom: 20px;
        }

        #fileInput {
            padding: 10px;
            border: 2px solid #3498db;
            border-radius: 5px;
            background-color: #ecf0f1;
            color: #333;
            cursor: pointer;
        }

        #compressionOptions {
            display: flex;
            justify-content: space-around;
            margin-bottom: 20px;
        }

        input[type="radio"] {
            margin-right: 5px;
        }

        input[type="number"] {
            padding: 8px;
            border: 2px solid #3498db;
            border-radius: 5px;
            background-color: #ecf0f1;
            color: #333;
        }

        button {
            padding: 10px 20px;
            background-color: #3498db;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        #previewContainer {
            margin-bottom: 20px;
        }

        #preview {
            max-width: 100%;
            max-height: 300px;
            border: 2px solid #3498db;
            border-radius: 5px;
        }

        #imageSize {
            margin-top: 10px;
            color: #333;
        }

        #downloadButton {
            padding: 10px 20px;
            background-color: #2ecc71;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <h1>File Compressor</h1>
    <div id="inputContainer">
        <input type="file" id="fileInput" accept="image/*" onchange="previewImage()">
    </div>
    <div id="compressionOptions">
        <div>
            <input type="radio" id="pixelRadio" name="compressionType" value="pixel" checked>
            <label for="pixelRadio">Pixel</label>
        </div>
        <div>
            <input type="radio" id="percentageRadio" name="compressionType" value="percentage">
            <label for="percentageRadio">Percentage</label>
        </div>
        <div>
            <label for="compressionValue">Compression Value:</label>
            <input type="number" id="compressionValue" placeholder="Enter value">
        </div>
    </div>
    <button onclick="compressImage()">Compress Image</button>
    <div id="previewContainer">
        <h3>Preview:</h3>
        <img id="preview" alt="Preview">
        <p id="imageSize">Image Size: </p>
    </div>
    <button id="downloadButton" onclick="downloadCompressedImage()" disabled>Download Compressed Image</button>

    <!-- Include image-compressor.js -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/image-compressor.js/2.1.6/image-compressor.min.js"></script>

    <script>
        let compressedBlob; // Variable to store the compressed image blob

        function previewImage() {
            const fileInput = document.getElementById('fileInput');
            const preview = document.getElementById('preview');
            const imageSize = document.getElementById('imageSize');

            const file = fileInput.files[0];
            const fileSizeKB = (file.size / 1024).toFixed(2); // in KB
            const fileSizeMB = (file.size / (1024 * 1024)).toFixed(2); // in MB
            imageSize.textContent = `Image Size: ${fileSizeKB} KB (${fileSizeMB} MB)`;

            const reader = new FileReader();
            reader.onload = function (e) {
                preview.src = e.target.result;
            };

            reader.readAsDataURL(file);
        }

        function compressImage() {
            const fileInput = document.getElementById('fileInput');
            const compressionType = document.querySelector('input[name="compressionType"]:checked').value;
            const compressionValue = document.getElementById('compressionValue').value;

            const image = new Image();
            image.src = URL.createObjectURL(fileInput.files[0]);

            image.onload = function () {
                const canvas = document.createElement('canvas');
                const context = canvas.getContext('2d');

                let maxWidth, maxHeight;
                if (compressionType === 'pixel') {
                    maxWidth = maxHeight = parseInt(compressionValue);
                } else {
                    maxWidth = image.width * (compressionValue / 100);
                    maxHeight = image.height * (compressionValue / 100);
                }

                canvas.width = maxWidth;
                canvas.height = maxHeight;

                context.drawImage(image, 0, 0, maxWidth, maxHeight);

                canvas.toBlob(function (blob) {
                    compressedBlob = blob;

                    const compressedSizeKB = (compressedBlob.size / 1024).toFixed(2); // in KB
                    const compressedSizeMB = (compressedBlob.size / (1024 * 1024)).toFixed(2); // in MB
                    document.getElementById('imageSize').textContent = `Compressed Image Size: ${compressedSizeKB} KB (${compressedSizeMB} MB)`;

                    const preview = document.getElementById('preview');
                    preview.src = URL.createObjectURL(compressedBlob);

                    // Enable the download button
                    document.getElementById('downloadButton').disabled = false;
                }, 'image/jpeg', 0.9);
            };
        }

        function downloadCompressedImage() {
            const downloadButton = document.getElementById('downloadButton');
            const downloadLink = document.createElement('a');
            downloadLink.href = URL.createObjectURL(compressedBlob);
            downloadLink.download = 'compressed_image.jpg';
            document.body.appendChild(downloadLink);
            downloadLink.click();
            document.body.removeChild(downloadLink);
            downloadButton.disabled = true;
        }
    </script>
</body>
</html>
